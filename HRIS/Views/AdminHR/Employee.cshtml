
@{
    ViewBag.Title = "Employee";
    Layout = "~/Views/Shared/_LayoutLeftNav.cshtml";
}

<style>
    .sidebar.h-sidebar .nav-list {
        border-width: 0;
        border-top: 2px solid #79B0CE;
        border-bottom: 2px solid #79B0CE;
    }
</style>
<script src="~/Scripts/hrisframework/hris.js"></script>
<script src="~/Content/assets/js/wizard.min.js"></script>
<script src="~/Content/assets/js/jquery.validate.min.js"></script>
<script src="~/Content/assets/js/jquery-additional-methods.min.js"></script>
<script src="~/Content/assets/js/bootbox.js"></script>
<script src="~/Content/assets/js/jquery.maskedinput.min.js"></script>
<script src="~/Content/assets/js/select2.min.js"></script>

<!-- ace scripts -->
<script src="~/Content/assets/js/ace-elements.min.js"></script>
<script src="~/Content/assets/js/ace.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $('#modal-wizard-container').ace_wizard();
        $('#modal-wizard .wizard-actions .btn[data-dismiss=modal]').removeAttr('disabled');



        Profile.HideAll();
        $("#contentGrid").toggle();
        hris.general.bindDropDown("Organization", null);
        $("#load_home").on("click", function () {
            $("#content").load("content.html");
        });

        $("#Organization").on('change', Profile.DB.Load);
        
        $("#profilegrid").on("click", function () {
            console.log("Grid clicked");
            Profile.HideAll();
            $("#contentGrid").toggle();
        });
        $("#profileJob").on("click", function () {
            Profile.HideAll();
            if (Profile.DB.selectedRow.IDV == undefined) {
                $("#myErrorModal").modal("show", true);
                $("#profilegrid").click();
            } else {
                $("#contentJob").toggle();
                console.log(Profile.Job.ID, Profile.DB.selectedRow.IDV);
                if (Profile.Job.ID != Profile.DB.selectedRow.IDV) {
                    Profile.Job.Load();
                }
            }
        });

        $('#employeeDB').on('rowselect', function (event) {
            // event arguments.
            var args = event.args;
            // row's bound index.
            var rowBoundIndex = args.rowindex;
            // row's data. The row's data object or null(when all rows are being selected or unselected with a single action). If you have a datafield called "firstName", to access the row's firstName, use var firstName = rowData.firstName;
            var rowData = args.row;
            console.log("DB Grid row", rowData);
            Profile.DB.selectedRow = rowData;
        });
    });

    var Profile = {
        DB: {
            Url: baseURL + 'api/employee/getEmployeeByOrg/',
            Data: [],
            selectedRow: {},
            Load: function (o) {
                var id = o.args.item.value;
                Profile.DB.Grid.Url = Profile.DB.Url +""+ id;
                Profile.DB.Grid.Render();
            },
            Grid: {
                Url: "",
                Render: function () {
                    console.log("url:", Profile.DB.Grid.Url);
                    var source = {
                        datatype: "json",
                        datafields: [
                            { name: 'ID', type: 'int' },
                            { name: 'IDV', type: 'int' },
                            { name: 'NIP', type: 'string' },
                            { name: 'Name', type: 'string' },
                            { name: 'Gender', type: 'string' },
                            { name: 'Religion', type: 'string' },
                            { name: 'Marital', type: 'string' },
                            { name: 'Nationality', type: 'string' },
                            { name: 'NickName', type: 'string' },
                        ],
                        id: 'ID',
                        url: Profile.DB.Grid.Url
                    }
                    var dataAdapter = new $.jqx.dataAdapter(source);
                    $("#employeeDB").jqxGrid({
                        width: '100%',
                        source: dataAdapter,
                        filterable: true,
                        sortable: true,
                        editable: true,
                        columnsresize: true,
                        columns: [
                            { text: 'NIP', editable: false, datafield: 'NIP', minwidth: "25%" },
                            { text: 'Name', datafield: 'Name', minwidth: "25%" },
                            { text: 'NickName', datafield: 'NickName', minwidth: "25%" },
                        ]
                    });
                    $("#employeeDB").on("bindingcomplete", function (event) {
                        console.log("binding finish");
                    });
                }
            },
        },
        Detail: {
            Data: [],
            Load: function () {
                $.ajax({
                    url: '',
                    success: function (s) {
                        console.log("Detail", s);
                    },
                    error: function(e){}
                });
            },
        },
        Address: {},
        Job: {
            ID: "",
            Data: [],
            Load: function () {
                Profile.Job.ID = Profile.DB.selectedRow.IDV;
                $.ajax({
                    url: baseURL + 'api/profileJob/History?id=' + Profile.Job.ID,
                    success: function (data) {
                        Profile.Job.Data = data;
                        Profile.Job.CreateTab();
                    },
                    error: function (e) { }
                });
            },
            CreateTab: function () {
                console.log("CreateTab");
                $("#recent-tab-job").empty();
                $("#task-tab-job").empty();
                $.each(Profile.Job.Data, function (i, v) {
                    $('#recent-tab-job').append('<li><a data-toggle="tab" href="#task-tab-job' + v.ID + '">ID ' + v.ID + '</a></li>');
                    Profile.Job.CreateForm(v);
                });
                $('#recent-tab-job li:first').addClass("active");
                $("#task-tab-job div:first").addClass("active");
            },
            CreateForm: function (data) {
                var xs6 = "col-xs-6";
                console.log("createForm", data);
                $("#task-tab-job")
                    .append($('<div>')
                    .attr('class', 'tab-pane')
                    .attr('id', 'task-tab-job' + data.ID));
                $("#task-tab-job" + data.ID)
                    .html(
                    $("<div>").addClass("panel-body")
                    .append(
                    $("<div>").addClass("form-group")
                    .html($("<input>").addClass("form-control")
                    .attr("id", "IDV" + data.ID)
                    .attr("disabled", "disabled")
                    .attr("type", "text")
                    .val(data.ID))
                    )
                    .append(
                    $("<div>").addClass("row")
                    .append($("<div>").addClass(xs6)
                    .html($("<div>").addClass("form-group")
                    .append($("<label>").attr("for", "Org" + data.ID).text("Department"))
                    .append($("<div>").addClass("form-control").attr('id', 'Org' + data.ID))))
                    .append($("<div>").addClass(xs6)
                    .html($("<div>").addClass("form-group")
                    .append($("<label>").attr("for", "Division" + data.ID).text("Division"))
                    .append($("<div>").addClass("form-control").attr('id', 'Division' + data.ID)))))
                    .append(
                    $("<div>").addClass("row")
                    .append($("<div>").addClass(xs6)
                    .html($("<div>").addClass("form-group")
                    .append($("<label>").attr("for", "Level" + data.ID).text("Level"))
                    .append($("<div>").addClass("form-control").attr('id', 'Level' + data.ID))))
                    .append($("<div>").addClass(xs6)
                    .html($("<div>").addClass("form-group")
                    .append($("<label>").attr("for", "Position" + data.ID).text("Position"))
                    .append($("<div>").addClass("form-control").attr('id', 'Position' + data.ID)))))
                    .append(
                    $("<div>").addClass("row")
                    .append($("<div>").addClass(xs6)
                    .html($("<div>").addClass("form-group")
                    .append($("<label>").attr("for", "Location" + data.ID).text("Location"))
                    .append($("<input>").addClass("form-control")
                    .attr("type","text").attr('id', 'Location' + data.ID))))
                    .append($("<div>").addClass(xs6)
                    .html($("<div>").addClass("form-group")
                    .append($("<label>").attr("for", "Status" + data.ID).text("Status"))
                    .append($("<div>").addClass("form-control").attr('id', 'Status' + data.ID)))))
                    );

                
                Profile.Job.BindForm(data);
            },
            BindForm: function (data) {
                Profile.Bind.DropDown("Org" + data.ID, "Org", data.JobDepartement);
                Profile.Bind.DropDown("Division" + data.ID, "Division", data.JobDivision);
                Profile.Bind.DropDown("Level" + data.ID, "level", data.JobLevel);
                Profile.Bind.DropDown("Position" + data.ID, "Position", data.JobPosition);
                Profile.Bind.DropDown("Status" + data.ID, "EmpStatus", data.employmentStatus);
                Profile.Bind.Input("Location" + data.ID, data.JobLocation);
            }
        },
        Bank: {},
        Identity: {},
        Dependant: {},
        Education: {},
        Training: {},
        Language: {},
        Skill: {},
        Certification: {},
        Matrix: {},
        Bind: {
            DropDown: function (div, list, value) {
                var i = $("#" + div);
                i.jqxDropDownList({ source: hris.list._getLOV(list), disabled: false, height: '25px', displayMember: "label", valueMember: "value", width: '96%' });
                if (value !== null) { i.jqxDropDownList('val', value); }
            },
            Input: function (div, value) {
                var i = $("#" + div);
                i.jqxInput({ width: "99%", height: '35px' });
                value = $.trim(value);
                if (value !== null) { i.jqxInput('val', value); }
            }
        },
        HideAll: function () {
            $("#contentGrid,#contentDetail,#contentAddress,#contentJob,#contentBank,#contentIdentity,#contentDependant,#contentEdu,#contentTraining,#contentLanguage,#contentSkill,#contentCertification,#contentMatrix").hide();
        }
    }
</script>

<!-- inline scripts related to this page -->
<script type="text/javascript">
			jQuery(function($) {

				$('[data-rel=tooltip]').tooltip();

				$('.select2').css('width','200px').select2({allowClear:true})
				.on('change', function(){
					$(this).closest('form').validate().element($(this));
				});


				var $validation = false;
				$('#fuelux-wizard-container')
				.ace_wizard({
					//step: 2 //optional argument. wizard will jump to step "2" at first
					//buttons: '.wizard-actions:eq(0)'
				})
				.on('actionclicked.fu.wizard' , function(e, info){
					if(info.step == 1 && $validation) {
						if(!$('#validation-form').valid()) e.preventDefault();
					}
				})
				//.on('changed.fu.wizard', function() {
				//})
				.on('finished.fu.wizard', function(e) {
					bootbox.dialog({
						message: "Thank you! Your information was successfully saved!",
						buttons: {
							"success" : {
								"label" : "OK",
								"className" : "btn-sm btn-primary"
							}
						}
					});
				}).on('stepclick.fu.wizard', function(e){
					//e.preventDefault();//this will prevent clicking and selecting steps
				});


				//jump to a step
				/**
				var wizard = $('#fuelux-wizard-container').data('fu.wizard')
				wizard.currentStep = 3;
				wizard.setState();
				*/

				//determine selected step
				//wizard.selectedItem().step



				//hide or show the other form which requires validation
				//this is for demo only, you usullay want just one form in your application
				$('#skip-validation').removeAttr('checked').on('click', function(){
					$validation = this.checked;
					if(this.checked) {
						$('#sample-form').hide();
						$('#validation-form').removeClass('hide');
					}
					else {
						$('#validation-form').addClass('hide');
						$('#sample-form').show();
					}
				})



				//documentation : http://docs.jquery.com/Plugins/Validation/validate


				$.mask.definitions['~']='[+-]';
				$('#phone').mask('(999) 999-9999');

				jQuery.validator.addMethod("phone", function (value, element) {
					return this.optional(element) || /^\(\d{3}\) \d{3}\-\d{4}( x\d{1,6})?$/.test(value);
				}, "Enter a valid phone number.");

				$('#validation-form').validate({
					errorElement: 'div',
					errorClass: 'help-block',
					focusInvalid: false,
					ignore: "",
					rules: {
						email: {
							required: true,
							email:true
						},
						password: {
							required: true,
							minlength: 5
						},
						password2: {
							required: true,
							minlength: 5,
							equalTo: "#password"
						},
						name: {
							required: true
						},
						phone: {
							required: true,
							phone: 'required'
						},
						url: {
							required: true,
							url: true
						},
						comment: {
							required: true
						},
						state: {
							required: true
						},
						platform: {
							required: true
						},
						subscription: {
							required: true
						},
						gender: {
							required: true,
						},
						agree: {
							required: true,
						}
					},

					messages: {
						email: {
							required: "Please provide a valid email.",
							email: "Please provide a valid email."
						},
						password: {
							required: "Please specify a password.",
							minlength: "Please specify a secure password."
						},
						state: "Please choose state",
						subscription: "Please choose at least one option",
						gender: "Please choose gender",
						agree: "Please accept our policy"
					},


					highlight: function (e) {
						$(e).closest('.form-group').removeClass('has-info').addClass('has-error');
					},

					success: function (e) {
						$(e).closest('.form-group').removeClass('has-error');//.addClass('has-info');
						$(e).remove();
					},

					errorPlacement: function (error, element) {
						if(element.is('input[type=checkbox]') || element.is('input[type=radio]')) {
							var controls = element.closest('div[class*="col-"]');
							if(controls.find(':checkbox,:radio').length > 1) controls.append(error);
							else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
						}
						else if(element.is('.select2')) {
							error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
						}
						else if(element.is('.chosen-select')) {
							error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
						}
						else error.insertAfter(element.parent());
					},

					submitHandler: function (form) {
					},
					invalidHandler: function (form) {
					}
				});




				$('#modal-wizard-container').ace_wizard();
				$('#modal-wizard .wizard-actions .btn[data-dismiss=modal]').removeAttr('disabled');


				/**
				$('#date').datepicker({autoclose:true}).on('changeDate', function(ev) {
					$(this).closest('form').validate().element($(this));
				});

				$('#mychosen').chosen().on('change', function(ev) {
					$(this).closest('form').validate().element($(this));
				});
				*/


				$(document).one('ajaxloadstart.page', function(e) {
					//in ajax mode, remove remaining elements before leaving page
					$('[class*=select2]').remove();
				});
			})
</script>
<div class="main-content-inner">
    <div id="sidebar2" class="sidebar h-sidebar navbar-collapse collapse ace-save-state" data-sidebar="true" data-sidebar-scroll="true" data-sidebar-hover="true">
        <ul class="nav nav-list" style="top: 0px;">
            <li class="hover"><a href="#" id="profilegrid"><i class="menu-icon fa fa-database"></i><span class="menu-text">Employee DB</span></a><b class="arrow"></b></li>
            <li class="hover"><a href="#" id="profileDetail"><i class="menu-icon fa fa-users"></i><span class="menu-text">Profile</span></a><b class="arrow"></b></li>
            <li class="hover"><a href="#" id="profileAddress"><i class="menu-icon fa fa-map"></i><span class="menu-text">Address</span></a><b class="arrow"></b></li>
            <li class="hover"><a href="#" id="profileJob"><i class="menu-icon fa fa-newspaper-o"></i><span class="menu-text">Job</span></a><b class="arrow"></b></li>
            <li class="hover"><a href="#" id="profileBank"><i class="menu-icon fa fa-dollar"></i><span class="menu-text">Bank</span></a><b class="arrow"></b></li>
            <li class="hover"><a href="#" id="profileIdentity"><i class="menu-icon fa fa-qrcode"></i><span class="menu-text">Identity</span></a><b class="arrow"></b></li>
            <li class="hover"><a href="#" id="profileDependant"><i class="menu-icon fa fa-sitemap"></i><span class="menu-text">Dependant</span></a><b class="arrow"></b></li>
            <li class="hover"><a href="#" id="profileEdu"><i class="menu-icon fa fa-bank"></i><span class="menu-text">Education</span></a><b class="arrow"></b></li>
            <li class="hover"><a href="#" id="profileTraining"><i class="menu-icon fa fa-book"></i><span class="menu-text">Training</span></a><b class="arrow"></b></li>
            <li class="hover"><a href="#" id="profileLanguage"><i class="menu-icon fa fa-language"></i><span class="menu-text">Language</span></a><b class="arrow"></b></li>
            <li class="hover"><a href="#" id="profileSKill"><i class="menu-icon fa fa-star"></i><span class="menu-text">Skill</span></a><b class="arrow"></b></li>
            <li class="hover"><a href="#" id="profileCertification"><i class="menu-icon fa fa-briefcase"></i><span class="menu-text">Certification</span></a><b class="arrow"></b></li>
            <li class="hover"><a href="#" id="profileMatrix"><i class="menu-icon fa fa-server"></i><span class="menu-text">Matrix</span></a><b class="arrow"></b></li>

        </ul><!-- /.nav-list -->
    </div>
    <div class="page-content">
        
        <div class="page-header">
            <h1>
                Employee Management
                <h4 class="lighter">
                <i class="ace-icon fa fa-plus-circle icon-animated-hand-pointer blue"></i>
                <a href="#modal-wizard" data-toggle="modal" class="pink"> NEW EMPLOYEE </a>
            </h4>
                <div id="Organization"></div>
            </h1>
            
        </div><!-- /.page-header -->

        <div class="row">
            <div class="col-xs-12">
                <!-- PAGE CONTENT BEGINS -->
                <div id="contentGrid">
                    <div id="employeeDB"></div>
                </div>
                <div id="contentDetail">1</div>
                <div id="contentAddress">1</div>
                <div id="contentJob">
                    <div class="page-content">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="widget-box transparent" id="recent-box-job">
                                    <div class="widget-header">
                                        <h4 class="widget-title lighter smaller">
                                            <i class="ace-icon fa fa-rss orange"></i>JOB
                                        </h4>

                                        <div class="widget-toolbar no-border">
                                            <ul class="nav nav-tabs" id="recent-tab-job">
                                                <!--// Dinamic Tab-->
                                            </ul>
                                        </div>
                                    </div>

                                    <div class="widget-body">
                                        <div class="widget-main padding-4">
                                            <div id="task-tab-job" class="tab-content padding-8">
                                                <!--// Dinamic Div-->
                                                
                                            </div>
                                        </div><!-- /.widget-main -->
                                    </div><!-- /.widget-body -->
                                </div><!-- /.widget-box -->
                            </div><!-- /.col -->


                        </div>
                    </div>
                </div>
                <div id="contentBank">1</div>
                <div id="contentIdentity">1</div>
                <div id="contentDependant">1</div>
                <div id="contentEdu">1</div>
                <div id="contentTraining">1</div>
                <div id="contentLanguage">1</div>
                <div id="contentSkill">1</div>
                <div id="contentCertification">1</div>
                <div id="contentMatrix">1</div>

            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.page-content -->
</div>

<div id="myErrorModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Warning</h4>
            </div>
            <div class="modal-body">
                No data selected!
            </div>

        </div>

    </div>
</div>

