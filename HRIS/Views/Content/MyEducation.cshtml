
@{
    ViewBag.Title = "MyEducation";
    Layout = "~/Views/Shared/_LayoutLeftNav.cshtml";
}


<script src=@Url.Content("~/Scripts/hrisframework/hris.js")></script>
<script src=@Url.Content("~/Scripts/jquery.ui.min.js")></script>

<div class="row">
    <div class="btn-group btn-breadcrumb">
        <a href="#" class="btn btn-primary"><i class="glyphicon glyphicon-home"></i></a>
        <a href="#" class="btn btn-info">Employee</a>
        <a href="#" class="btn btn-success">(Beta) My Education</a>
    </div>

    <h1 style="margin-bottom:0; margin-top:0; text-align:left; letter-spacing:-1px; line-height:1; font-family: Arial, Helvetica, sans-serif; font-size: 25px; font-weight: bold; padding-bottom:0; padding-top:15px;">(Beta) My Education</h1>
    <h2 style="margin-bottom:15px; margin-top:0;   border-bottom: solid 1px #d7e9f3; padding-left:30px; font-size:14px; font-family:Calibri"></h2>
</div>
<br />

@{ Html.RenderPartial("~/Views/Shared/_SessionUser.cshtml"); }

<script type="text/javascript">
    var listEdu = hris.list._dbLOV("Edu");
    var listCountry = hris.list._dbLOV("Country");
    function loadEducation(callback) {
        var url = "http://localhost:54636/api/profileEdu/" + cIDV;
        // prepare the data
        var source =
        {
            datatype: "json",
            datafields: [
                { name: 'ID', type: 'string' },
                { name: 'IDV', type: 'string' },
                { name: 'eduCountry', type: 'int' },
                { name: 'countryName', value: 'eduCountry', values: { source: listCountry.records, value: 'value', name: 'label' } },
                { name: 'eduGraduate', type: 'string' },
                { name: 'eduLevel', type: 'int' },
                { name: 'levelName', value: 'eduLevel', values: { source: listEdu.records, value: 'value', name: 'label' } },
                { name: 'eduMajor', type: 'int' },
                { name: 'eduValue', type: 'string' }
            ],
            id: 'ID',
            url: url
        };
        var dataAdapter = new $.jqx.dataAdapter(source);
        $("#educationTable").jqxGrid(
        {
            width: '100%',
            source: dataAdapter,
            columnsresize: true,
            columns: [
                { text: 'Level', datafield: 'levelName', minwidth: "20%" },
                { text: 'Major', datafield: 'eduMajor', minwidth: "20%" },
                { text: 'Graduate', datafield: 'eduGraduate', width: "20%" },
                { text: 'Value', datafield: 'eduValue', minwidth: "10%" },
                { text: 'Country', datafield: 'countryName', width: "15%" }
            ]
        });

        if (callback != undefined) {
            callback();
        }
    }

    var Education = {
        url: "http://localhost:54636/api/profileEdu",
        add: function (data) {
            console.log("create new", data);
            data.vCreatedBy = cIDV;
            $.ajax({
                url: this.url,
                method: 'POST',
                data: data,
                success: function (o) {
                    console.log("Sukses", o);
                    $('#educationTable').jqxGrid('updatebounddata');
                },
                error: function (e) {
                    console.log("Error", e);
                }
            });
        },
        update: function (data) {
            console.log("update dulu", data);
            data.vUpdatedBy = cIDV;
            $.ajax({
                url: this.url +"/"+ data.ID,
                method: 'PUT',
                data: data,
                success: function (result) {
                    console.log("Sukses", result);
                    $('#educationTable').jqxGrid('updatebounddata');
                },
                error: function (e) {
                    console.log("Error", e);
                }
            });
        },
        Grid: {
            dataSelected: {},
            rowSelected: function (o) {
                console.log("rowSel", o);
                Education.Grid.dataSelected = o.args.row;
                console.log("modal data", Education.Grid.dataSelected);
            }
        },
        Modal: {
            data: {},
            create: function () {
                console.log("Create Form");
                hris.general.bindInput("rowId", null);
                hris.general.bindInput("eduMajor", null);
                hris.general.bindInput("eduValue", null);
                hris.general.bindDropDown("Edu", null);
                hris.general.bindDropDown("Country", null);
                hris.general.bindDateTime("eduGraduate", null);
            },
            show: function () {
                $("#myEducationModal").modal("show", true);
            },
            clean: function () {
                console.log("Modal Cleaned");
                hris.general.cleanInput("rowId");
                hris.general.cleanInput("eduMajor");
                hris.general.cleanInput("eduValue");
                hris.general.cleanDropDown("Edu");
                hris.general.cleanDropDown("Country");
                hris.general.cleanDateTime("eduGraduate");
            },
            add: function () {
                Education.Modal.clean();
                Education.Modal.show();
            },
            edit: function () {
                if (Education.Grid.dataSelected.uniqueid) {
                    Education.Modal.clean();
                    Education.Modal.fill();
                    Education.Modal.show();
                } else {
                    Education.Modal.error();
                }
            },
            fill: function () {
                console.log("Fill Form");
                var data = Education.Grid.dataSelected;
                hris.general.bindInput("rowId", data.ID);
                hris.general.bindInput("eduMajor", data.eduMajor);
                hris.general.bindInput("eduValue", data.eduValue);
                hris.general.bindDropDown("Edu", data.eduLevel);
                hris.general.bindDropDown("Country", data.eduCountry);
                hris.general.bindDateTime("eduGraduate", data.eduGraduate);
            },
            error: function () {
                $("#myErrorModal").modal("show", true);
            },
            submit: function () {
                var data = {
                    ID: hris.general.getData("rowId"),
                    IDV: cIDV,
                    eduMajor: hris.general.getData("eduMajor"),
                    eduGraduate: hris.general.getData("eduGraduate"),
                    eduCountry: hris.general.getData("Country"),
                    eduLevel: hris.general.getData("Edu"),
                    eduValue: hris.general.getData("eduValue")
                }
                console.log("Modal Submit", data);
                // Proses save
                if (data.ID) {
                    Education.update(data);
                } else {
                    Education.add(data);
                }
            }
        },
    }

    $(document).ready(function () {
        loadEducation(Education.Modal.create);
        $("#submit").click(Education.Modal.submit);
        $("#editButton").click(Education.Modal.edit);
        $("#addButton").click(Education.Modal.add);
        $("#educationTable").on('rowselect', Education.Grid.rowSelected);
    });
</script>

<div class="row">
    <div class="col-lg-10">
        <div class="btn-group pull-right" role="group" aria-label="...">
            <button id="addButton" class="btn btn-success ">Add</button>
            <button id="editButton" class="btn btn-info">Edit</button>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-10">
        <div id="educationTable"></div>
    </div>
</div>

<div id="myEducationModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Education Info</h4>
            </div>
            
            <div class="modal-body">
                <div class="form-group">
                    <input type="hidden" class="form-control" id="rowId" />
                </div>
                <div class="form-group">
                    <label for="Edu">Level</label>
                    <div class="form-control" id="Edu"></div>
                </div>
                <div class="form-group">
                    <label for="Country">Country</label>
                    <div class="form-control" id="Country"></div>
                </div>
                <div class="form-group">
                    <label for="eduMajor">Major</label>
                    <input type="text" class="form-control" id="eduMajor" />
                </div>
                <div class="form-group">
                    <label for="eduValue">Value</label>
                    <input type="text" class="form-control" id="eduValue" />
                </div>
                <div class="form-group">
                    <label for="eduGraduate">Graduate Date</label>
                    <div class="form-control" id="eduGraduate"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="submit" class="btn btn-success" data-dismiss="modal">Submit</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<div id="myErrorModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Warning</h4>
            </div>
            <div class="modal-body">
                No data selected!
            </div>

        </div>

    </div>
</div>
