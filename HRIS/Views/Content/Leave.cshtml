@model BusinessEntities.CrudEntities.UserCredModel
@{
    ViewBag.Title = "Leave";
    Layout = "~/Views/Shared/_LayoutLeftNav.cshtml";
}
<script src=@Url.Content("~/Scripts/hrisframework/hris.js")></script>
<script src=@Url.Content("~/Scripts/jquery.ui.min.js")></script>


<script src=@Url.Content("~/Scripts/multidatepicker/jquery-ui.multidatespicker.js")></script>

<link rel="stylesheet" type="text/css" href=@Url.Content("~/Content/multidatepicker/mdp.css")>

<div class="breadcrumbs ace-save-state" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="#">Home</a>
        </li>
        <li class="active">Form</li>
        <li class="active">Leave</li>
    </ul><!-- /.breadcrumb -->

    <div class="nav-search" id="nav-search">
        <form class="form-search">
            <span class="input-icon">
                <input type="text" placeholder="Search ..." class="nav-search-input" id="nav-search-input" autocomplete="off" />
                <i class="ace-icon fa fa-search nav-search-icon"></i>
            </span>
        </form>
    </div><!-- /.nav-search -->
</div>

<div class="page-content">
    <div class="row">
        <!--<h2 style="border-bottom: 1px solid #052135">Matrix - HRD</h2style="border-bottom:>-->
        <h1 style="margin-bottom:0; margin-top:0; text-align:left; letter-spacing:-1px; line-height:1; font-family: Arial, Helvetica, sans-serif; font-size: 25px; font-weight: bold; padding-bottom:0; padding-top:15px;">LEAVE FORM</h1>
        <h2 style="margin-bottom:15px; margin-top:0;   border-bottom: solid 1px #d7e9f3; padding-left:30px; font-size:14px; font-family:Calibri">Apply Leave and See Your Form Status</h2>
    </div>

    <div class="row">
        <div class="col-xs-12">
            <div class="col-xs-2">
                <input type="button" value="COMMON" id='isAnnual' style="margin-left:0" />
            </div>

            <div class="col-xs-8">
                <div id="PolicyType"></div>
            </div>
            <div class="col-xs-2">
                <div class="pull-right">
                    <input type="button" value="APPLY" id='Apply' />
                </div>
            </div>
        </div>
    </div>



    <div class="row">
        <div class="col-xs-12">
            <div class="col-xs-6 form-actions" style="background-color: none; background: none;">
                <div id="full-year"></div>
            </div>
            <div class="col-xs-3 form-actions" style="background-color: none; background: none;">
                <div class="widget-box" style="height:100%">
                    <div class="widget-header">
                        <h5 class="widget-title smaller">Information</h5>
                        <div class="widget-toolbar">
                            <span class="label label-success">
                                16%
                                <i class="ace-icon fa fa-arrow-up"></i>
                            </span>
                        </div>
                    </div>
                    <div class="widget-body">
                        <div class="widget-main padding-6">
                            <span class="label label-warning">Entitled</span>&nbsp;
                                <span class="label label-inverse arrowed" id="totalEntitled">12</span>
                            <br />
                            <span class="label label-info">Carry Over</span>&nbsp;
                                <span class="label label-inverse arrowed" id="totalAnnualCarry">12</span>
                            <hr />
                            <span class="label label-danger">Balance</span>&nbsp;
                                <span class="label label-inverse arrowed" id="totalBalance">12</span>
                            <br />
                            <span class="label label-danger">Applied</span>&nbsp;
                                <span class="label label-inverse arrowed" id="totalAmount">12</span>
                            <hr />
                            <h5 class="widget-title smaller">Superior<div id="supervisor"><strong>Mr. X</strong></div></h5>
                            
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs-3 form-actions" style="background-color: none; background: none;">
                <div class="widget-box">
                    <div class="widget-body">
                        <div class="widget-main padding-6">
                            <div id="table"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="row clearfix form-actions">
        <div class="col-md-12 pull-right">
            
            <button class="btn btn-info" type="button">
                <i class="ace-icon fa fa-check bigger-110"></i>
                Submit
            </button>
            <button class="btn" type="reset">
                <i class="ace-icon fa fa-undo bigger-110"></i>
                Reset
            </button>
        </div>
    </div>
    <div id="balanceProgress"></div>
</div>






<script type="text/javascript">
    //Use
    var MasterSource = hris.source._employeeLeaveRoleBased(cIDV);
    var MasterDataAdapter = hris.data._dataAdapter(MasterSource);
    var AllSource = hris.source._employeeRoleBased(cIDV);
    var MasterAllAdapter = hris.data._dataAdapter(AllSource);

    console.log('Row: ', MasterDataAdapter);

    $(document).ready(function () {

        var ROW = MasterDataAdapter.records[1];
        console.log('OnReady:', ROW);

        hris.menu.roots("MenuForm");
        hris.menu.sub("subMenuFormLeave");

        page.Init();

        table.Bind();
        datepicker.Bind();

        page.Event();
    });



    var Data = {
        this: this,
        Init: function () {
            hris.source._employeeRoleBased(cIDV);
        },
        Func: {
            Duration: {
                Reset: function () { this.Selected.TotalDuration = 0; },
                Calculate: function () {
                    this.Func.Duration.Reset();
                    for (i = 0; i < this.Process.length; i++) {
                        b = this.Process[i].Duration;
                        this.Selected.TotalDuration = this.Selected.TotalDuration + b;
                    };
                }
            },
            Selected: {
                Reset: function () {
                    this.Selected.TotalDuration = 0;
                    this.Selected.Date = {};
                    this.Selected.Type = [];
                },
                Update: function (label, id) {
                    if (label) {
                        this.Selected.Type[id].Duration = 0.5;
                        this.Selected.Type[id].DurationLabel = true;
                    } else {
                        this.Selected.Type[id].Duration = 1;
                        this.Selected.Type[id].DurationLabel = false;
                    }
                    return this.Process;
                }
            },
            SelectedPolicyType: {
                Get: function (vardata) {
                    this.SelectedPolicyType.Row = vardata;
                    this.SelectedPolicyType.Leave.Balance = vardata.balanceValue;
                    this.SelectedPolicyType.Leave.Entitled = vardata.roleBasedValue;
                    this.SelectedPolicyType.Leave.Remaining = vardata.remainingValue;
                }
            },
            Adapter: function (source) {
                dataAdapter = new $.jqx.dataAdapter(source, {
                    autoBind: true,
                    loadComplete: function () {
                        //alert(dataAdapter.records[0]);

                    },
                    loadError: function (xhr, status, error) {
                        console.log(error);
                    }
                });
            }
        },
        Selected: {
            Type: [],
            Date: {},
            TotalDuration: 0
        },
        SelectedPolicyType: {
            Row: [],
            Leave: {
                Balance: 0,
                Remaining: 0,
                Entitled: 0
            },
            Annual: {
                Balance: 0,
                Remaining: 0,
                CarryOver: 0
            }
        },
        Table: [],
        SourceLeave: MasterDataAdapter,
        SourceAll: MasterAllAdapter,
    }

    var datepicker = {
        Bind: function () {
            //console.log('Datepicker Init()');
            noWeekEnd = $.datepicker.noWeekends;
            $('#full-year').multiDatesPicker({
                disabled: false,
                beforeShowDay: $.datepicker.noWeekends,
                numberOfMonths: [1, 2],
                dateFormat: "mm/dd/yy",
                onSelect: function (date, el) {

                    Data.Func.Selected.Reset();

                    Data.Selected.Date = date;



                    //dateInArray.forEach(dateSelected);
                    dateInArray = Leave.CalculateDate.addDate(date, dateInArray);
                    dateInArray.forEach(Leave.CalculateDate.dateSelected);
                    console.log('totalDays:', totalDays);
                    if (Leave.Calculate.checkBalance(totalDays, Balance)) {
                        // if (checkBalance(totalDays)) {
                        try {
                            Leave.Table.Source.localdata = data;
                            Leave.Calculate.updateBalance(Balance, totalDays);
                            //updateBalance(Balance, totalDays)
                            $("#table").jqxGrid('updatebounddata');
                        } catch (err) {
                            console.log("Error : ", err.message);
                        }
                    } else {
                        //document.getElementById('full-year').style.pointerEvents = 'none';
                        $('#full-year').multiDatesPicker('removeDates', date);
                        console.log("Maximum Days !! Balance: " + Balance);
                    }
                }
            });
            $('#full-year').multiDatesPicker('removeDates', new Date());
            $('#full-year').multiDatesPicker('resetDates', 'disabled');
            //$('#full-year').multiDatesPicker({ beforeShowDay: $.datepicker.noWeekends }); error behaviour when added
        },
        Destroy: function () { },
        Disable: function () { },
        Enable: function () { $('#full-year').multiDatesPicker({ disabled: false }); }
    };

    var table = {
        Func: {

        },
        Column: [{ text: 'Index', dataField: 'ID', width: 10, hidden: true },
                  { text: 'Date', dataField: 'Date', cellsformat: 'D', width: '65%', editable: false },
                  { text: 'Half Days', dataField: 'DurationLabel', columntype: 'checkbox', width: '35%' }],
        Source: {
            localdata: Data.Table,
            dataType: "array",
            dataFields:
            [
                { name: 'ID', type: 'number' },
                { name: 'Date', type: 'date' },
                { name: 'Duration', type: 'int' },
                { name: 'DurationLabel', type: 'bool' }
            ],
            updaterow: function (rowid, rowdata, commit) {

                Data.Func.Duration.Calculate();
                this.Source.localdata = Data.Func.Selected.Update(rowdata.DurationLabel, rowdata.ID);
                commit(true);
            }
        },
        SourceReturn: function () {
            return this.Source;
        },
        dataAdapter: function () {
            var s = this.Source;
            //console.log("dataAdapter Source: ", s);
            return new $.jqx.dataAdapter(s, { autoBind: true })
        },
        Bind: function () {
            $("#table").jqxGrid({
                width: '100%',
                height: 260,
                theme: 'metro',
                editable: true,
                source: this.dataAdapter(),
                columns: this.Column
            });
        }
    };


    var page = {
        Init: function () {
            this.Component();
            this.Event();
        },
        Component: function () {
            $('#PolicyType').jqxDropDownList({ source: Data.SourceLeave, theme: 'fresh', disabled: false, height: '35px', displayMember: "policyTypeName", valueMember: "ID", width: '100%' });
            $("#balanceProgress").jqxProgressBar({ animationDuration: 0, showText: false, template: "info", width: '100%', height: 25, value: Data.SourceAll, max: Data.SourceAll });
            $('#isAnnual').jqxSwitchButton({ height: 35, width: '100%', checked: true, onLabel: 'ANNUAL', offLabel: 'COMMON', theme: 'orange' });
            hris.general.bindButton('Apply');

        },
        func: {
            clear: function () {
                $('#full-year').multiDatesPicker('resetDates', 'picked');
                $('#PolicyType').jqxDropDownList('clearSelection');
                $("#table").jqxGrid('updatebounddata');
                document.getElementById('full-year').style.pointerEvents = 'auto';
            }
        },
        Event: function () {
            $('.jqx-switchbutton').on('unchecked', function (event) {
                $('#isAnnual').jqxSwitchButton({ offLabel: 'COMMON' });
                $("#totalAnnualCarry").show();
                $("#totalAnnualCurrent").show();
                $("#totalAnnualCarryLabel").show();
                $("#totalAnnualCurrentLabel").show();
                $('#PolicyType').hide();
                page.func.clear();
            });

            $('.jqx-switchbutton').on('checked', function (event) {
                $('#isAnnual').jqxSwitchButton({ onLabel: 'ANNUAL' });
                $('#PolicyType').show();
                $('labelCommon').show();
                page.func.clear();
            });

            $('#PolicyType').on('change', function (event) {




                var i = $('#PolicyType');
                var index = event.args.index;
                var MasterData = MasterDataAdapter.records[index];
                Data.Func.SelectedPolicyType.Get(Data.SourceLeave.records[index]);

                console.log(Data.SelectedPolicyType);

                //console.log(MasterData);
                policyType = MasterData.policyType;

                //Reset
                td = 0;
                totalDays = 0;
                data = [];
                dateInArray = [];
                Leave.Table.Source.localdata = [];
                $("#table").jqxGrid('updatebounddata');
                datepicker.Bind();
                //document.getElementById('full-year').style.pointerEvents = 'auto';


                //Calculate
                Balance = MasterData.balanceValue;
                if (Balance == null) Balance = 0;
                Entitled = MasterData.roleBasedValue;
                i.jqxDropDownList({ selectedIndex: index });
                Leave.Calculate.updateBalance(Balance, totalDays);
            });

            $('#Apply').on('click', function (event) {
                console.log("Posted: ", data);
                $.post(baseURL + 'api/employeeForm/postLeave/' + cIDV, { '': data })
                    .done(function (data) {
                        console.log("ajax, Data Posted: ", data);
                        BootstrapDialog.show({
                            message: 'Leave Has Been Submitted !!'
                        });
                        clear();
                    });
            });
        }
    }


    //will be removed ..............................................................................
    
    $(document).ready(function () {

        
    })
</script>
<style>
    #full-year li[style] {
        display: inline !important;
    }

    .ui-widget-content {
        background-image: none;
        background: #d7e9f3;
    }

    element.style {
        display: block;
        width: auto !important;
    }

    .HR-Div {
        padding: 5px;
        margin-bottom: 3px;
        border: 1px solid transparent;
        border-radius: 4px;
    }

    .HR-Warning {
        color: #c09853;
        background-color: #fcf8e3;
        border-color: #fbeed5;
    }

    .HR-Info {
        color: #3a87ad;
        background-color: #d9edf7;
        border-color: #bce8f1;
    }

    table {
        /* border-collapse: collapse; */
        /* border-spacing: 0; */
    }

    .widget-box {
        padding: 0;
        box-shadow: none;
        margin: 3px 0;
        border: 1px solid #CCC;
    }
</style>




